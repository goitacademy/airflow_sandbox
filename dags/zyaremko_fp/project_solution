import os
from datetime import datetime, timedelta
from airflow import DAG
from airflow.providers.apache.spark.operators.spark_submit import SparkSubmitOperator

# Шлях до поточної директорії (де лежать твої .py Spark jobs)
current_directory = os.path.dirname(os.path.abspath(__file__))

# Параметри DAG
default_args = {
    'owner': 'airflow',
    'depends_on_past': False,
    'retries': 1,
    'retry_delay': timedelta(minutes=5)
}

with DAG(
    dag_id='datalake_part2_pipeline',
    default_args=default_args,
    description='Landing -> Bronze -> Silver -> Gold Spark jobs',
    schedule_interval=None,  # запускаємо вручну
    start_date=datetime(2025, 9, 22),
    catchup=False,
    max_active_runs=1,
    tags=['zoryana', 'final_project', 'batch_datalake']
) as dag:

    # Завантаження та збереження у Bronze
    landing_to_bronze = SparkSubmitOperator(
        task_id='landing_to_bronze',
        application=os.path.join(current_directory, 'landing_to_bronze.py'),
        conn_id='spark-default',
        verbose=1
    )

    # Очищення та збереження у Silver
    bronze_to_silver = SparkSubmitOperator(
        task_id='bronze_to_silver',
        application=os.path.join(current_directory, 'bronze_to_silver.py'),
        conn_id='spark-default',
        verbose=1
    )

    # Join + агрегація у Gold
    silver_to_gold = SparkSubmitOperator(
        task_id='silver_to_gold',
        application=os.path.join(current_directory, 'silver_to_gold.py'),
        conn_id='spark-default',
        verbose=1
    )

    # Залежності
    landing_to_bronze >> bronze_to_silver >> silver_to_gold
