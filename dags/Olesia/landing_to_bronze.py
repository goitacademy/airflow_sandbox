import requests
from pyspark.sql import SparkSession
from pathlib import Path

# C—Ç–≤–æ—Ä–µ–Ω–Ω—è Spark-—Å–µ—Å—ñ—ó
spark = SparkSession.builder.appName("LandingToBronzeLayer").getOrCreate()

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è CSV-—Ñ–∞–π–ª—ñ–≤ –∑ FTP

def download_data(local_file_path):
    url = "https://ftp.goit.study/neoversity/"
    downloading_url = url + local_file_path + ".csv"
    print(f"\nüì• –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑: {downloading_url}")
    response = requests.get(downloading_url)

    if response.status_code == 200:
        save_path = f"bronze/{local_file_path}.csv"
        with open(save_path, "wb") as file:
            file.write(response.content)
        print(f"‚úÖ –§–∞–π–ª –∑–±–µ—Ä–µ–∂–µ–Ω–æ: {save_path}")
    else:
        print(f"‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Ñ–∞–π–ª {local_file_path}. –ö–æ–¥ –ø–æ–º–∏–ª–∫–∏: {response.status_code}")

# –û—Å–Ω–æ–≤–Ω–∞ –ª–æ–≥—ñ–∫–∞ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è

def main():
    Path("bronze").mkdir(parents=True, exist_ok=True)  # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–∞—Ç–∞–ª–æ–≥—É, —è–∫—â–æ –Ω–µ —ñ—Å–Ω—É—î

    files = ["athlete_bio", "athlete_event_results"]
    for filename in files:
        download_data(filename)

    # –ó—á–∏—Ç—É–≤–∞–Ω–Ω—è CSV —É DataFrame
    for filename in files:
        csv_path = f"bronze/{filename}.csv"
        df = spark.read.option("header", True).csv(csv_path)
        print(f"\nüßæ –ü–æ–ø–µ—Ä–µ–¥–Ω—ñ–π –ø–µ—Ä–µ–≥–ª—è–¥ {filename}:")
        df.show(5)
        print(f"üî¢ –ö—ñ–ª—å–∫—ñ—Å—Ç—å —Ä—è–¥–∫—ñ–≤ —É {filename}: {df.count()}")

        # –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è —É Parquet
        df.write.mode("overwrite").parquet(f"bronze/{filename}")
        print(f"üíæ –ó–±–µ—Ä–µ–∂–µ–Ω–æ —è–∫ parquet: bronze/{filename}")

if __name__ == "__main__":
    main()


spark.stop()

